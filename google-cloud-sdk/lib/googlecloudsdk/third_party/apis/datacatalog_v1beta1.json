{
  "kind": "discovery#restDescription",
  "discoveryVersion": "v1",
  "id": "datacatalog:v1beta1",
  "name": "datacatalog",
  "canonicalName": "Cloud DataCatalog",
  "version": "v1beta1",
  "revision": "0",
  "title": "Google Cloud Data Catalog API",
  "description": "Google Cloud Data Catalog API provides features to attach metadata to Google Cloud Platform resources like BigQuery Tables.<br>\nKey critical resources include:\n<ul>\n    <li>Entries  (Datahub representation of a cloud resource)<\/li>\n    <li>Tag Templates (Definition of columns and value types for attaching metadata)<\/li>\n    <li>Tags (Values associated with Tag templates and attached to Entries.)<\/li>\n<\/ul>\nGoogle Cloud Data Catalog API also provides rich search functionality to search resources for Entries and tags.\n",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
   },
  "documentationLink": "https://cloud.google.com/data-catalog/docs/",
  "protocol": "rest",
  "rootUrl": "https://datacatalog.googleapis.com/",
  "servicePath": "",
  "baseUrl": "https://datacatalog.googleapis.com/",
  "batchPath": "batch",
  "version_module": true,
  "fullyEncodeReservedExpansion": true,
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "schemas": {
    "GoogleCloudDatacatalogV1beta1Entry": {
      "id": "GoogleCloudDatacatalogV1beta1Entry",
      "description": "Entry Metadata. \nA Data Catalog Entry resource represents another resource in Google\nCloud Platform, such as a BigQuery Dataset or a Pub\/Sub Topic. Clients can\nuse the `linked_resource` field in the Entry resource to refer to the\noriginal resource id of the source system.\n\nAn Entry resource contains resource details, such as its schema. An Entry can\nalso be used to attach flexible metadata, such as a\nTag.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. The Data Catalog resource name of the entry in URL format. For\nexample,\n\"projects\/{project_id}\/locations\/{location}\/entryGroups\/{entry_group_id}\/entries\/{entry_id}\".",
          "type": "string"
        },
        "linkedResource": {
          "description": "The full name of the cloud resource the entry belongs to. See:\nhttps:\/\/cloud.google.com\/apis\/design\/resource_names#full_resource_name\n\nData Catalog supports resources from select Google Cloud Platform systems.\n`linked_resource` is the full name of the Google Cloud Platform resource.\nFor example, the `linked_resource` for a table resource from BigQuery is:\n\n\"\/\/bigquery.googleapis.com\/projects\/projectId\/datasets\/datasetId\/tables\/tableId\".",
          "type": "string"
        },
        "type": {
          "description": "Type of entry.",
          "enumDescriptions": [
            "Default unknown type",
            "The type of entry that has a GoogleSQL schema, including logical views.",
            "An entry type which is a set of files or objects. Example - Cloud Storage\nfileset."
          ],
          "type": "string",
          "enum": [
            "ENTRY_TYPE_UNSPECIFIED",
            "TABLE",
            "FILESET"
          ]
        },
        "gcsFilesetSpec": {
          "description": "Specification that applies to a Cloud Storage fileset. This is only valid\non entries of type FILESET.",
          "$ref": "GoogleCloudDatacatalogV1beta1GcsFilesetSpec"
        },
        "bigqueryTableSpec": {
          "description": "Specification that applies to a BigQuery table. This is only valid on\nentries of type TABLE.",
          "$ref": "GoogleCloudDatacatalogV1beta1BigQueryTableSpec"
        },
        "displayName": {
          "description": "Display information such as title and description.\nA short name to identify the entry, for example,\n\"Analytics Data - Jan 2011\".",
          "type": "string"
        },
        "description": {
          "description": "Entry description, which can consist of several sentences or paragraphs\nthat describe entry contents.",
          "type": "string"
        },
        "schema": {
          "description": "Schema of the entry.",
          "$ref": "GoogleCloudDatacatalogV1beta1Schema"
        },
        "sourceSystemTimestamps": {
          "description": "Timestamps about the underlying Google Cloud Platform resource -- not about\nthis Data Catalog Entry.",
          "$ref": "GoogleCloudDatacatalogV1beta1SystemTimestamps"
        }
      }
    },
    "GoogleCloudDatacatalogV1beta1GcsFilesetSpec": {
      "id": "GoogleCloudDatacatalogV1beta1GcsFilesetSpec",
      "description": "Describes a Cloud Storage fileset entry.",
      "type": "object",
      "properties": {
        "filePatterns": {
          "description": "Patterns to identify a set of files in Google Cloud Storage.\n\nExamples of valid file_patterns:\n    \"gs:\/\/bucket_name\/*\"        (matches all files in 'bucket_name')\n    \"gs:\/\/bucket_name\/file*\u201D    (matches files prefixed by \"file\" in\n                                 'bucket_name')\n    \"gs:\/\/bucket_name\/a\/*\/b\"    (matches all files in 'bucket_name' that\n                                 match a\/*\/b pattern, e.g. a\/c\/b, a\/d\/b)\n    \"gs:\/\/another_bucket\/a.txt\" (matches gs:\/\/another_bucket\/a.txt)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sampleGcsFileSpecs": {
          "description": "Output only. Sample files contained in this fileset, not all files\ncontained in this fileset are represented here.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDatacatalogV1beta1GcsFileSpec"
          }
        }
      }
    },
    "GoogleCloudDatacatalogV1beta1GcsFileSpec": {
      "id": "GoogleCloudDatacatalogV1beta1GcsFileSpec",
      "description": "Specifications of a single file in GCS.",
      "type": "object",
      "properties": {
        "filePath": {
          "description": "The full file path. Example: \"gs:\/\/bucket_name\/a\/b.txt\".",
          "type": "string"
        },
        "gcsTimestamps": {
          "description": "Timestamps about the GCS file.",
          "$ref": "GoogleCloudDatacatalogV1beta1SystemTimestamps"
        },
        "sizeBytes": {
          "description": "The size of the file, in bytes.",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "GoogleCloudDatacatalogV1beta1SystemTimestamps": {
      "id": "GoogleCloudDatacatalogV1beta1SystemTimestamps",
      "description": "Timestamps about this resource according to a particular system.",
      "type": "object",
      "properties": {
        "createTime": {
          "description": "Output only. The creation time of the resource within the given system.",
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. The last-modified time of the resource within the given\nsystem.",
          "type": "string",
          "format": "google-datetime"
        },
        "expireTime": {
          "description": "Output only. The expiration time of the resource within the given system.",
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "GoogleCloudDatacatalogV1beta1BigQueryTableSpec": {
      "id": "GoogleCloudDatacatalogV1beta1BigQueryTableSpec",
      "description": "Describes a BigQuery table.",
      "type": "object",
      "properties": {
        "tableSourceType": {
          "description": "The table source type.",
          "enumDescriptions": [
            "Default unknown type.",
            "Table view.",
            "BigQuery native table."
          ],
          "type": "string",
          "enum": [
            "TABLE_SOURCE_TYPE_UNSPECIFIED",
            "BIGQUERY_VIEW",
            "BIGQUERY_TABLE"
          ]
        },
        "viewSpec": {
          "description": "Table view specification. This field should only be populated if\ntable_source_type is BIGQUERY_VIEW.",
          "$ref": "GoogleCloudDatacatalogV1beta1ViewSpec"
        }
      }
    },
    "GoogleCloudDatacatalogV1beta1ViewSpec": {
      "id": "GoogleCloudDatacatalogV1beta1ViewSpec",
      "description": "Table view specification.",
      "type": "object",
      "properties": {
        "viewQuery": {
          "description": "The query that defines the table view.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDatacatalogV1beta1Schema": {
      "id": "GoogleCloudDatacatalogV1beta1Schema",
      "description": "Represents a schema (e.g. BigQuery, GoogleSQL, Avro schema).",
      "type": "object",
      "properties": {
        "columns": {
          "description": "Schema of columns. A maximum of 10,000 columns and sub-columns can be\nspecified.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDatacatalogV1beta1ColumnSchema"
          }
        }
      }
    },
    "GoogleCloudDatacatalogV1beta1ColumnSchema": {
      "id": "GoogleCloudDatacatalogV1beta1ColumnSchema",
      "description": "Representation of a column within a schema. Columns could be nested inside\nother columns.",
      "type": "object",
      "properties": {
        "column": {
          "description": "Required. Name of the column.",
          "type": "string"
        },
        "type": {
          "description": "Required. Type of the column.",
          "type": "string"
        },
        "description": {
          "description": "Description of the column.",
          "type": "string"
        },
        "mode": {
          "description": "A column's mode indicates whether the values in this column are\nrequired, nullable, etc. Only 'NULLABLE', 'REQUIRED' and 'REPEATED' are\nsupported, default mode is 'NULLABLE'.",
          "type": "string"
        },
        "columns": {
          "description": "Schema of sub-columns. This field is deprecated, use subcolumns instead.\nOnly one of {columns, subcolumns} should be set.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDatacatalogV1beta1ColumnSchema"
          }
        },
        "subcolumns": {
          "description": "Schema of sub-columns.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDatacatalogV1beta1ColumnSchema"
          }
        }
      }
    }
  },
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "entryGroups": {
              "resources": {
                "entries": {
                  "methods": {
                    "patch": {
                      "id": "datacatalog.projects.locations.entryGroups.entries.patch",
                      "path": "v1beta1/{+name}",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/entryGroups/{entryGroupsId}/entries/{entriesId}",
                      "httpMethod": "PATCH",
                      "parameters": {
                        "name": {
                          "description": "Output only. The Data Catalog resource name of the entry in URL format. For\nexample,\n\"projects\/{project_id}\/locations\/{location}\/entryGroups\/{entry_group_id}\/entries\/{entry_id}\".",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/entryGroups\/[^\/]+\/entries\/[^\/]+$",
                          "type": "string"
                        },
                        "updateMask": {
                          "description": "The fields to update on the entry.  If absent or empty, all modifiable\nfields are updated.\n\nModifiable fields in synced entries:\n\n1. schema (Pub\/Sub topics only)\n\nModifiable fields in native entries:\n\n1. display_name\n2. description\n3. schema",
                          "location": "query",
                          "type": "string",
                          "format": "google-fieldmask"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "request": {
                        "$ref": "GoogleCloudDatacatalogV1beta1Entry"
                      },
                      "response": {
                        "$ref": "GoogleCloudDatacatalogV1beta1Entry"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Updates an existing entry."
                    },
                    "get": {
                      "id": "datacatalog.projects.locations.entryGroups.entries.get",
                      "path": "v1beta1/{+name}",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/entryGroups/{entryGroupsId}/entries/{entriesId}",
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the entry. For example,\n\"projects\/{project_id}\/locations\/{location}\/entryGroups\/{entry_group_id}\/entries\/{entry_id}\".",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/entryGroups\/[^\/]+\/entries\/[^\/]+$",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "GoogleCloudDatacatalogV1beta1Entry"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Gets an entry."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "entries": {
      "methods": {
        "lookup": {
          "id": "datacatalog.entries.lookup",
          "path": "v1beta1/entries:lookup",
          "flatPath": "v1beta1/entries:lookup",
          "httpMethod": "GET",
          "parameters": {
            "linkedResource": {
              "description": "The full name of the Google Cloud Platform resource the Data Catalog\nentry represents. See:\nhttps:\/\/cloud.google.com\/apis\/design\/resource_names#full_resource_name\nExample:\n\"\/\/bigquery.googleapis.com\/projects\/projectId\/datasets\/datasetId\/tables\/tableId\".",
              "location": "query",
              "type": "string"
            },
            "sqlResource": {
              "description": "The SQL name of the entry. Example:\n\n1. cloud_pubsub.project_id.topic_id\n2. bigquery.project_id.dataset_id.table_id\n3. datacatalog.project_id.location_id.entry_group_id.entry_id",
              "location": "query",
              "type": "string"
            }
          },
          "parameterOrder": [
          ],
          "response": {
            "$ref": "GoogleCloudDatacatalogV1beta1Entry"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Get an entry by target resource name. This method allows clients to use\nthe resource name from the source Google Cloud Platform service to get the\nCloud Data Catalog Entry."
        }
      }
    }
  },
  "basePath": ""
}